//
// DefaultAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class WSNewsAPI {
    /**
     Returns articles

     - parameter page: (query) Use this to page through the results. 
     - parameter pageSize: (query) The number of results to return per page. 20 is the default, 100 is the maximum. 
     - parameter q: (query) Keywords or phrases to search for in the article title and body. The complete value for q must be URL-encoded. Advanced search is supported here: See: https://newsapi.org/docs/endpoints/everything (optional)
     - parameter qInTitle: (query) Keywords or phrases to search for in the article title only. The complete value for qInTitle must be URL-encoded. Advanced search is supported here: See: https://newsapi.org/docs/endpoints/everything (optional)
     - parameter sources: (query) A comma-seperated string of identifiers (maximum 20) for the news sources or blogs you want headlines from. Use the /sources endpoint to locate these programmatically or look at the sources index. (optional)
     - parameter domains: (query) A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to restrict the search to. (optional)
     - parameter excludeDomains: (query) A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to remove from the results. (optional)
     - parameter from: (query) A date and optional time for the oldest article allowed. This should be in ISO 8601 format (e.g. 2021-02-15 or 2021-02-15T19:07:40) Default: the oldest according to your plan. (optional)
     - parameter to: (query) A date and optional time for the newest article allowed. This should be in ISO 8601 format (e.g. 2021-02-15 or 2021-02-15T19:07:40) Default: the newest according to your plan. (optional)
     - parameter language: (query)  (optional)
     - parameter sortBy: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func everythingGet(page: Int, pageSize: Int, q: String? = nil, qInTitle: String? = nil, sources: String? = nil, domains: String? = nil, excludeDomains: String? = nil, from: Date? = nil, to: Date? = nil, language: WSNewsLanguage? = nil, sortBy: WSNewsSortBy? = nil, completion: @escaping ((_ data: WSNewsTopHeadlineResponse?,_ error: Error?) -> Void)) {
        everythingGetWithRequestBuilder(page: page, pageSize: pageSize, q: q, qInTitle: qInTitle, sources: sources, domains: domains, excludeDomains: excludeDomains, from: from, to: to, language: language, sortBy: sortBy).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns articles
     - GET /everything

     - :
       - type: http
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "totalResults" : 0,
  "articles" : [ {
    "publishedAt" : "publishedAt",
    "author" : "author",
    "urlToImage" : "http://example.com/aeiou",
    "description" : "description",
    "source" : {
      "country" : "ae",
      "name" : "name",
      "description" : "description",
      "language" : "ar",
      "id" : "id",
      "category" : "business",
      "url" : "http://example.com/aeiou"
    },
    "title" : "title",
    "url" : "http://example.com/aeiou",
    "content" : "content"
  }, {
    "publishedAt" : "publishedAt",
    "author" : "author",
    "urlToImage" : "http://example.com/aeiou",
    "description" : "description",
    "source" : {
      "country" : "ae",
      "name" : "name",
      "description" : "description",
      "language" : "ar",
      "id" : "id",
      "category" : "business",
      "url" : "http://example.com/aeiou"
    },
    "title" : "title",
    "url" : "http://example.com/aeiou",
    "content" : "content"
  } ],
  "status" : "status"
}}]
     - parameter page: (query) Use this to page through the results. 
     - parameter pageSize: (query) The number of results to return per page. 20 is the default, 100 is the maximum. 
     - parameter q: (query) Keywords or phrases to search for in the article title and body. The complete value for q must be URL-encoded. Advanced search is supported here: See: https://newsapi.org/docs/endpoints/everything (optional)
     - parameter qInTitle: (query) Keywords or phrases to search for in the article title only. The complete value for qInTitle must be URL-encoded. Advanced search is supported here: See: https://newsapi.org/docs/endpoints/everything (optional)
     - parameter sources: (query) A comma-seperated string of identifiers (maximum 20) for the news sources or blogs you want headlines from. Use the /sources endpoint to locate these programmatically or look at the sources index. (optional)
     - parameter domains: (query) A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to restrict the search to. (optional)
     - parameter excludeDomains: (query) A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to remove from the results. (optional)
     - parameter from: (query) A date and optional time for the oldest article allowed. This should be in ISO 8601 format (e.g. 2021-02-15 or 2021-02-15T19:07:40) Default: the oldest according to your plan. (optional)
     - parameter to: (query) A date and optional time for the newest article allowed. This should be in ISO 8601 format (e.g. 2021-02-15 or 2021-02-15T19:07:40) Default: the newest according to your plan. (optional)
     - parameter language: (query)  (optional)
     - parameter sortBy: (query)  (optional)

     - returns: RequestBuilder<WSNewsTopHeadlineResponse> 
     */
    open class func everythingGetWithRequestBuilder(page: Int, pageSize: Int, q: String? = nil, qInTitle: String? = nil, sources: String? = nil, domains: String? = nil, excludeDomains: String? = nil, from: Date? = nil, to: Date? = nil, language: WSNewsLanguage? = nil, sortBy: WSNewsSortBy? = nil) -> RequestBuilder<WSNewsTopHeadlineResponse> {
        let path = "/everything"
        let URLString = WSNewsSwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "q": q, 
                        "qInTitle": qInTitle, 
                        "sources": sources, 
                        "domains": domains, 
                        "excludeDomains": excludeDomains, 
                        "from": from?.encodeToJSON(), 
                        "to": to?.encodeToJSON(), 
                        "language": language, 
                        "sortBy": sortBy, 
                        "page": page.encodeToJSON(), 
                        "pageSize": pageSize.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<WSNewsTopHeadlineResponse>.Type = WSNewsSwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Returns a list of sources

     - parameter language: (query)  (optional)
     - parameter country: (query)  (optional)
     - parameter category: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sourcesGet(language: WSNewsLanguage? = nil, country: WSNewsCountry? = nil, category: WSNewsCategory? = nil, completion: @escaping ((_ data: WSNewsSourcesResponse?,_ error: Error?) -> Void)) {
        sourcesGetWithRequestBuilder(language: language, country: country, category: category).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns a list of sources
     - GET /sources

     - :
       - type: http
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "sources" : [ {
    "country" : "ae",
    "name" : "name",
    "description" : "description",
    "language" : "ar",
    "id" : "id",
    "category" : "business",
    "url" : "http://example.com/aeiou"
  }, {
    "country" : "ae",
    "name" : "name",
    "description" : "description",
    "language" : "ar",
    "id" : "id",
    "category" : "business",
    "url" : "http://example.com/aeiou"
  } ],
  "status" : "status"
}}]
     - parameter language: (query)  (optional)
     - parameter country: (query)  (optional)
     - parameter category: (query)  (optional)

     - returns: RequestBuilder<WSNewsSourcesResponse> 
     */
    open class func sourcesGetWithRequestBuilder(language: WSNewsLanguage? = nil, country: WSNewsCountry? = nil, category: WSNewsCategory? = nil) -> RequestBuilder<WSNewsSourcesResponse> {
        let path = "/sources"
        let URLString = WSNewsSwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "language": language, 
                        "country": country, 
                        "category": category
        ])


        let requestBuilder: RequestBuilder<WSNewsSourcesResponse>.Type = WSNewsSwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Returns a list of headlines

     - parameter q: (query) Keywords or a phrase to search for. (optional)
     - parameter sources: (query) A comma-seperated string of identifiers for the news sources or blogs you want headlines from. Use the /sources endpoint to locate these programmatically or look at the sources index. Note: you can&#x27;t mix this param with the country or category params. (optional)
     - parameter country: (query)  (optional)
     - parameter category: (query)  (optional)
     - parameter page: (query) Use this to page through the results if the total results found is greater than the page size. (optional)
     - parameter pageSize: (query) The number of results to return per page (request). 20 is the default, 100 is the maximum. (optional, default to 20)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func topHeadlinesGet(q: String? = nil, sources: String? = nil, country: WSNewsCountry? = nil, category: WSNewsCategory? = nil, page: Int? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: WSNewsTopHeadlineResponse?,_ error: Error?) -> Void)) {
        topHeadlinesGetWithRequestBuilder(q: q, sources: sources, country: country, category: category, page: page, pageSize: pageSize).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns a list of headlines
     - GET /top-headlines

     - :
       - type: http
       - name: bearerAuth
     - examples: [{contentType=application/json, example={
  "totalResults" : 0,
  "articles" : [ {
    "publishedAt" : "publishedAt",
    "author" : "author",
    "urlToImage" : "http://example.com/aeiou",
    "description" : "description",
    "source" : {
      "country" : "ae",
      "name" : "name",
      "description" : "description",
      "language" : "ar",
      "id" : "id",
      "category" : "business",
      "url" : "http://example.com/aeiou"
    },
    "title" : "title",
    "url" : "http://example.com/aeiou",
    "content" : "content"
  }, {
    "publishedAt" : "publishedAt",
    "author" : "author",
    "urlToImage" : "http://example.com/aeiou",
    "description" : "description",
    "source" : {
      "country" : "ae",
      "name" : "name",
      "description" : "description",
      "language" : "ar",
      "id" : "id",
      "category" : "business",
      "url" : "http://example.com/aeiou"
    },
    "title" : "title",
    "url" : "http://example.com/aeiou",
    "content" : "content"
  } ],
  "status" : "status"
}}]
     - parameter q: (query) Keywords or a phrase to search for. (optional)
     - parameter sources: (query) A comma-seperated string of identifiers for the news sources or blogs you want headlines from. Use the /sources endpoint to locate these programmatically or look at the sources index. Note: you can&#x27;t mix this param with the country or category params. (optional)
     - parameter country: (query)  (optional)
     - parameter category: (query)  (optional)
     - parameter page: (query) Use this to page through the results if the total results found is greater than the page size. (optional)
     - parameter pageSize: (query) The number of results to return per page (request). 20 is the default, 100 is the maximum. (optional, default to 20)

     - returns: RequestBuilder<WSNewsTopHeadlineResponse> 
     */
    open class func topHeadlinesGetWithRequestBuilder(q: String? = nil, sources: String? = nil, country: WSNewsCountry? = nil, category: WSNewsCategory? = nil, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<WSNewsTopHeadlineResponse> {
        let path = "/top-headlines"
        let URLString = WSNewsSwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "q": q, 
                        "sources": sources, 
                        "country": country, 
                        "category": category, 
                        "page": page?.encodeToJSON(), 
                        "pageSize": pageSize?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<WSNewsTopHeadlineResponse>.Type = WSNewsSwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
